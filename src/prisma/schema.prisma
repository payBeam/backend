// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ACCOUNTS
model User {
  id        String    @id @default(uuid())
  email     String?   @unique
  password  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  merchant  Merchant?

  authProviders AuthProvider[]
}

model Merchant {
  id          String  @id @unique
  user        User    @relation(fields: [id], references: [id])
  verified    Boolean @default(false)
  name        String
  description String
  walletAddress String?
  payoutToken  TokenType @default(USDC)
  network      String? // e.g., "Ethereum", "Solana", "ZetaChain", etc.

  invoice Invoice[]
}

model AuthProvider {
  id         String  @id @default(uuid())
  provider   String // "google", "local", "facebook", etc.
  providerId String? // ID from OAuth provider (Google ID, Facebook ID, etc.)
  userId     String  @unique
  user       User    @relation(fields: [userId], references: [id])
}

// FINANCES
// TODO add expiry date
model Invoice {
  id          String    @id @default(ulid())
  amount      Float
  token       TokenType @default(USDC)
  title       String?
  description String?
  // paymentMode PaymentMode
  status      Status    @default(Pending)

  updatedAt      DateTime         @updatedAt
  invoicePayment InvoicePayment[]
  merchant       Merchant         @relation(fields: [merchantId], references: [id])
  merchantId     String
}

// TODO - add amount and receiepent address
model InvoicePayment {
  memo             String    @id @default(ulid())
  address          String
  recipientAddress String    @default("") // remove this default value  before going prod
  amount           Float     @default(0.00) // remove this default value  before going prod
  token            TokenType
  status           Status    @default(Pending)
  invoiceId        String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @default(now()) @updatedAt // remove this default value  before going prod

  invoice Invoice @relation(fields: [invoiceId], references: [id])
}

//ENUMs
enum TokenType {
  USDC
  USDT
  XLM
  ZETA
  ETH
  BASE
  BNB
  SOL
  TON
  TRX
}

enum PaymentMode {
  PayYourSelf
  SplitPay
  TransferInvoice
}

enum Status {
  Failed
  Pending
  Success
  Cancelled
  Refunded
}
